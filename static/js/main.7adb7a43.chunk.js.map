{"version":3,"sources":["img/divine-light-fire-light.png","img/land.png","img/vegetation.png","img/sunlight.png","img/moonlight.png","img/starlight.png","img/sea-creatures.png","img/birds.png","img/animal-kingdom.png","img/eye-mind.png","img/heart-with-flames.png","img/dominion-gavel.png","img/freedom.png","img/sky.png","img/color-wheel.png","components/hand.js","components/element.js","components/wheelInput.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Hand","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","pos","setPosition","bind","assertThisInitialized","setState","react_default","a","createElement","className","style","transform","concat","src","icon","alt","Component","Element","name","WheelInput","type","min","max","onChange","App","ColorWheel","components_hand","DivineFire","ref","src_components_element","Sky","Land","Vegetation","Sunlight","Moonlight","Starlight","SeaCreatures","Birds","AnimalKingdom","EyeMind","HeatWithFlames","DominionGavel","Freedom","components_wheelInput","ev","refs","hand1","target","value","hand2","land","vegetation","sunlight","moonlight","starlight","seaCreatures","birds","animalKingdom","eyeMind","heatWithFlames","dominionGavel","freedom","Boolean","window","location","hostname","match","ReactDOM","render","src_app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,giBC0BzBC,qBAtBb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,IAAK,GAEPR,EAAKS,YAAcT,EAAKS,YAAYC,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IALFA,2EAQPQ,GACVL,KAAKS,SAAS,CAAEJ,yCAIhB,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,MAAO,CAAEC,UAAS,UAAAC,OAAYhB,KAAKI,MAAMC,KAAO,IAAM,IAApC,UACpCK,EAAAC,EAAAC,cAAA,OAAKK,IAAKjB,KAAKJ,MAAMsB,KAAMC,IAAI,sBAC/BT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAjBNO,cCuBJC,qBArBb,SAAAA,EAAYzB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,IACjBxB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,IAAK,GAEPR,EAAKS,YAAcT,EAAKS,YAAYC,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IALFA,2EAQPQ,GACVL,KAAKS,SAAS,CAAEJ,yCAIhB,OACEK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUC,MAAO,CAAEC,UAAS,UAAAC,OAAYhB,KAAKI,MAAMC,KAAO,IAAM,IAAO,IAAM,GAAjD,UACzCK,EAAAC,EAAAC,cAAA,OAAKK,IAAKjB,KAAKJ,MAAMsB,KAAMC,IAAKnB,KAAKJ,MAAM0B,KAAMR,MAAO,CAAEC,UAAS,WAAAC,OAAahB,KAAKI,MAAMC,KAAO,IAAM,IAAO,IAAM,GAAlD,mBAhBrDe,cCYPG,0LATX,OACEb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKK,IAAKjB,KAAKJ,MAAMsB,KAAMC,IAAKnB,KAAKJ,MAAM0B,OAC3CZ,EAAAC,EAAAC,cAAA,SAAOY,KAAK,QAAQC,IAAI,IAAIC,IAAI,KAAKC,SAAU3B,KAAKJ,MAAM+B,mBALzCP,cCiEVQ,0LA5CJ,IAAA/B,EAAAG,KACP,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKY,IAAYV,IAAI,gBAC1BT,EAAAC,EAAAC,cAACkB,EAAD,CAAMR,KAAK,SAASJ,KAAMa,IAAYC,IAAI,UAC1CtB,EAAAC,EAAAC,cAACkB,EAAD,CAAMR,KAAK,SAASJ,KAAMa,IAAYC,IAAI,UAE1CtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,MAAMJ,KAAMgB,IAAKF,IAAI,QACnCtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,OAAOJ,KAAMiB,IAAMH,IAAI,SACrCtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,aAAaJ,KAAMkB,IAAYJ,IAAI,eACjDtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,WAAWJ,KAAMmB,IAAUL,IAAI,aAC7CtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,YAAYJ,KAAMoB,IAAWN,IAAI,cAC/CtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,YAAYJ,KAAMqB,IAAWP,IAAI,cAC/CtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,eAAeJ,KAAMsB,IAAcR,IAAI,iBACrDtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,QAAQJ,KAAMuB,IAAOT,IAAI,UACvCtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,gBAAgBJ,KAAMwB,IAAeV,IAAI,kBACvDtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,UAAUJ,KAAMyB,IAASX,IAAI,YAC3CtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,iBAAiBJ,KAAM0B,IAAgBZ,IAAI,mBACzDtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,gBAAgBJ,KAAM2B,IAAeb,IAAI,kBACvDtB,EAAAC,EAAAC,cAACqB,EAAD,CAASX,KAAK,UAAUJ,KAAM4B,IAASd,IAAI,aAG7CtB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBACdH,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,SAASJ,KAAMa,IAAYJ,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKC,MAAM5C,YAAY0C,EAAGG,OAAOC,UACpG1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,SAASJ,KAAMa,IAAYJ,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKI,MAAM/C,YAAY0C,EAAGG,OAAOC,UACpG1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,OAAOJ,KAAMiB,IAAMR,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKK,KAAKhD,YAAY0C,EAAGG,OAAOC,UAC3F1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,aAAaJ,KAAMkB,IAAYT,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKM,WAAWjD,YAAY0C,EAAGG,OAAOC,UAC7G1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,WAAWJ,KAAMmB,IAAUV,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKO,SAASlD,YAAY0C,EAAGG,OAAOC,UACvG1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,YAAYJ,KAAMoB,IAAWX,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKQ,UAAUnD,YAAY0C,EAAGG,OAAOC,UAC1G1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,YAAYJ,KAAMqB,IAAWZ,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKS,UAAUpD,YAAY0C,EAAGG,OAAOC,UAC1G1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,eAAeJ,KAAMsB,IAAcb,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKU,aAAarD,YAAY0C,EAAGG,OAAOC,UACnH1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,QAAQJ,KAAMuB,IAAOd,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKW,MAAMtD,YAAY0C,EAAGG,OAAOC,UAC9F1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,gBAAgBJ,KAAMwB,IAAef,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKY,cAAcvD,YAAY0C,EAAGG,OAAOC,UACtH1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,UAAUJ,KAAMyB,IAAShB,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKa,QAAQxD,YAAY0C,EAAGG,OAAOC,UACpG1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,iBAAiBJ,KAAM0B,IAAgBjB,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKc,eAAezD,YAAY0C,EAAGG,OAAOC,UACzH1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,gBAAgBJ,KAAM2B,IAAelB,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKe,cAAc1D,YAAY0C,EAAGG,OAAOC,UACtH1C,EAAAC,EAAAC,cAACmC,EAAD,CAAYzB,KAAK,UAAUJ,KAAM4B,IAASnB,SAAU,SAACqB,GAAD,OAAQnD,EAAKoD,KAAKgB,QAAQ3D,YAAY0C,EAAGG,OAAOC,mBAtC5FhC,cCbE8C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9D,EAAAC,EAAAC,cAAC6D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7adb7a43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/divine-light-fire-light.66d0a6cf.png\";","module.exports = __webpack_public_path__ + \"static/media/land.c52602d1.png\";","module.exports = __webpack_public_path__ + \"static/media/vegetation.f34f94f4.png\";","module.exports = __webpack_public_path__ + \"static/media/sunlight.9196c5e5.png\";","module.exports = __webpack_public_path__ + \"static/media/moonlight.591aee9c.png\";","module.exports = __webpack_public_path__ + \"static/media/starlight.c5101b4f.png\";","module.exports = __webpack_public_path__ + \"static/media/sea-creatures.382eb5a2.png\";","module.exports = __webpack_public_path__ + \"static/media/birds.e1777a59.png\";","module.exports = __webpack_public_path__ + \"static/media/animal-kingdom.9c8946c4.png\";","module.exports = __webpack_public_path__ + \"static/media/eye-mind.b3a25b07.png\";","module.exports = __webpack_public_path__ + \"static/media/heart-with-flames.81981a40.png\";","module.exports = __webpack_public_path__ + \"static/media/dominion-gavel.e6745ea5.png\";","module.exports = __webpack_public_path__ + \"static/media/freedom.44947d13.png\";","module.exports = __webpack_public_path__ + \"static/media/sky.f8effc16.png\";","module.exports = __webpack_public_path__ + \"static/media/color-wheel.acd5398f.png\";","import React, { Component } from \"react\";\r\nimport \"./hand.css\";\r\n\r\nclass Hand extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pos: 1\r\n    };\r\n    this.setPosition = this.setPosition.bind(this);\r\n  }\r\n\r\n  setPosition(pos) {\r\n    this.setState({ pos });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hand\" style={{ transform: `rotate(${this.state.pos * (360 / 14)}deg)` }}>\r\n          <img src={this.props.icon} alt=\"{this.props.name}\"></img>\r\n          <div className=\"arm\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hand;\r\n","import React, { Component } from \"react\";\r\nimport \"./element.css\";\r\n\r\n\r\nclass Element extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pos: 1\r\n    };\r\n    this.setPosition = this.setPosition.bind(this);\r\n  }\r\n\r\n  setPosition(pos) {\r\n    this.setState({ pos });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"element\" style={{ transform: `rotate(${this.state.pos * (360 / 14) - (180 / 14)}deg)` }}>\r\n        <img src={this.props.icon} alt={this.props.name} style={{ transform: `rotate(-${this.state.pos * (360 / 14) - (180 / 14)}deg)` }}></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Element;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nimport \"./wheelInput.css\";\r\n\r\nclass WheelInput extends Component {\r\n  render() {\r\n    return (\r\n      <label className=\"wheel-input\">\r\n        <img src={this.props.icon} alt={this.props.name} />\r\n        <input type=\"range\" min=\"1\" max=\"14\" onChange={this.props.onChange} />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WheelInput;\r\n","import React, { Component } from \"react\";\n\nimport DivineFire from \"./img/divine-light-fire-light.png\";\nimport Sky from \"./img/sky.png\";\nimport Land from \"./img/land.png\";\nimport Vegetation from \"./img/vegetation.png\";\nimport Sunlight from \"./img/sunlight.png\";\nimport Moonlight from \"./img/moonlight.png\";\nimport Starlight from \"./img/starlight.png\";\nimport SeaCreatures from \"./img/sea-creatures.png\";\nimport Birds from \"./img/birds.png\";\nimport AnimalKingdom from \"./img/animal-kingdom.png\";\nimport EyeMind from \"./img/eye-mind.png\";\nimport HeatWithFlames from \"./img/heart-with-flames.png\";\nimport DominionGavel from \"./img/dominion-gavel.png\";\nimport Freedom from \"./img/freedom.png\";\n\nimport ColorWheel from \"./img/color-wheel.png\";\n\nimport Hand from \"./components/hand\";\nimport Element from \"./components/element\";\nimport WheelInput from \"./components/wheelInput\";\n\nimport \"./app.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"wheel\">\n          <img src={ColorWheel} alt=\"Color Wheel\"></img>\n          <Hand name=\"Hand 1\" icon={DivineFire} ref=\"hand1\" />\n          <Hand name=\"Hand 2\" icon={DivineFire} ref=\"hand2\" />\n          \n          <Element name=\"Sky\" icon={Sky} ref=\"sky\" />\n          <Element name=\"Land\" icon={Land} ref=\"land\" />\n          <Element name=\"Vegetation\" icon={Vegetation} ref=\"vegetation\" />\n          <Element name=\"Sunlight\" icon={Sunlight} ref=\"sunlight\" />\n          <Element name=\"Moonlight\" icon={Moonlight} ref=\"moonlight\" />\n          <Element name=\"Starlight\" icon={Starlight} ref=\"starlight\" />\n          <Element name=\"SeaCreatures\" icon={SeaCreatures} ref=\"seaCreatures\" />\n          <Element name=\"Birds\" icon={Birds} ref=\"birds\" />\n          <Element name=\"AnimalKingdom\" icon={AnimalKingdom} ref=\"animalKingdom\" />\n          <Element name=\"EyeMind\" icon={EyeMind} ref=\"eyeMind\" />\n          <Element name=\"HeatWithFlames\" icon={HeatWithFlames} ref=\"heatWithFlames\" />\n          <Element name=\"DominionGavel\" icon={DominionGavel} ref=\"dominionGavel\" />\n          <Element name=\"Freedom\" icon={Freedom} ref=\"freedom\" />\n        </div>\n\n        <form className=\"wheel-control\">\n          <WheelInput name=\"Hand 1\" icon={DivineFire} onChange={(ev) => this.refs.hand1.setPosition(ev.target.value)} />\n          <WheelInput name=\"Hand 2\" icon={DivineFire} onChange={(ev) => this.refs.hand2.setPosition(ev.target.value)} />\n          <WheelInput name=\"Land\" icon={Land} onChange={(ev) => this.refs.land.setPosition(ev.target.value)} />\n          <WheelInput name=\"Vegetation\" icon={Vegetation} onChange={(ev) => this.refs.vegetation.setPosition(ev.target.value)} />\n          <WheelInput name=\"Sunlight\" icon={Sunlight} onChange={(ev) => this.refs.sunlight.setPosition(ev.target.value)} />\n          <WheelInput name=\"Moonlight\" icon={Moonlight} onChange={(ev) => this.refs.moonlight.setPosition(ev.target.value)} />\n          <WheelInput name=\"Starlight\" icon={Starlight} onChange={(ev) => this.refs.starlight.setPosition(ev.target.value)} />\n          <WheelInput name=\"SeaCreatures\" icon={SeaCreatures} onChange={(ev) => this.refs.seaCreatures.setPosition(ev.target.value)} />\n          <WheelInput name=\"Birds\" icon={Birds} onChange={(ev) => this.refs.birds.setPosition(ev.target.value)} />\n          <WheelInput name=\"AnimalKingdom\" icon={AnimalKingdom} onChange={(ev) => this.refs.animalKingdom.setPosition(ev.target.value)} />\n          <WheelInput name=\"EyeMind\" icon={EyeMind} onChange={(ev) => this.refs.eyeMind.setPosition(ev.target.value)} />\n          <WheelInput name=\"HeatWithFlames\" icon={HeatWithFlames} onChange={(ev) => this.refs.heatWithFlames.setPosition(ev.target.value)} />\n          <WheelInput name=\"DominionGavel\" icon={DominionGavel} onChange={(ev) => this.refs.dominionGavel.setPosition(ev.target.value)} />\n          <WheelInput name=\"Freedom\" icon={Freedom} onChange={(ev) => this.refs.freedom.setPosition(ev.target.value)} />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}