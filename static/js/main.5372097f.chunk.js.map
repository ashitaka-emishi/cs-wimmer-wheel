{"version":3,"sources":["components/img/color-wheel.png","components/img/torch.png","components/img/divine-light.png","components/img/sky.png","components/img/land.png","components/img/vegetation.png","components/img/sunlight.png","components/img/moonlight.png","components/img/starlight.png","components/img/sea-creatures.png","components/img/birds.png","components/img/animal-kingdom.png","components/img/eye-mind.png","components/img/heart-with-flames.png","components/img/dominion-gavel.png","components/img/freedom.png","wheelwork.js","components/torch.js","components/idea.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Wheelwork","t1","t2","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Error","_t1","Math","min","_t2","max","_c1","slice","reduce","a","i","_c2","c1","c2","concept","concat","_fullConcept","getFullConcept","bind","assertThisInitialized","w","results","push","findWheels","reverse","length","conceptStr","wheels","Torch","react_default","createElement","className","style","transform","props","pos","src","TorchIcon","alt","Component","Idea","icon","name","ideas","DivineLight","Sky","Land","Vegetation","Sunlight","Moonlight","Starlight","SeaCreatures","Birds","AnimalKingdom","EyeMind","HeatWithFlames","DominionGavel","Freedom","map","idx","assign","key","App","concepts","getAllConcepts","state","changeConcept","ev","newConcept","target","innerText","setState","currentConcept","conceptText","wheelHtml","ColorWheel","src_components_torch","getIdeas","onClick","Boolean","window","location","hostname","match","ReactDOM","render","src_app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5372097f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/color-wheel.acd5398f.png\";","module.exports = __webpack_public_path__ + \"static/media/torch.66d0a6cf.png\";","module.exports = __webpack_public_path__ + \"static/media/divine-light.32af01f2.png\";","module.exports = __webpack_public_path__ + \"static/media/sky.f8effc16.png\";","module.exports = __webpack_public_path__ + \"static/media/land.c52602d1.png\";","module.exports = __webpack_public_path__ + \"static/media/vegetation.f34f94f4.png\";","module.exports = __webpack_public_path__ + \"static/media/sunlight.9196c5e5.png\";","module.exports = __webpack_public_path__ + \"static/media/moonlight.591aee9c.png\";","module.exports = __webpack_public_path__ + \"static/media/starlight.c5101b4f.png\";","module.exports = __webpack_public_path__ + \"static/media/sea-creatures.382eb5a2.png\";","module.exports = __webpack_public_path__ + \"static/media/birds.e1777a59.png\";","module.exports = __webpack_public_path__ + \"static/media/animal-kingdom.9c8946c4.png\";","module.exports = __webpack_public_path__ + \"static/media/eye-mind.b3a25b07.png\";","module.exports = __webpack_public_path__ + \"static/media/heart-with-flames.81981a40.png\";","module.exports = __webpack_public_path__ + \"static/media/dominion-gavel.e6745ea5.png\";","module.exports = __webpack_public_path__ + \"static/media/freedom.44947d13.png\";","class Wheelwork extends Object {\r\n    static findWheels(c1,c2) {\r\n        var concept = `${c1}/${c2}`;\r\n        var results = [];\r\n        var t1,t2,w;\r\n        for (t1=0; t1< 14; t1++) {\r\n            for (t2=t1+1; t2< 14; t2++) {\r\n                w = new Wheelwork(t1,t2);\r\n                if (w.concept === concept) {\r\n                    results.push(w);\r\n                }\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static getAllConcepts() {\r\n        var results = [];\r\n        var i,w;\r\n        for (i=52; i > 0; i--) {\r\n            w = Wheelwork.findWheels(i, 105 - i).reverse();\r\n            if (w.length === 0) {\r\n                var conceptStr = `${i}/${105-i}`;\r\n                w.push({\r\n                    c1: i,\r\n                    c2: 105 - i,\r\n                    concept: conceptStr\r\n                });\r\n            }\r\n            results = results.concat(w);\r\n\r\n        }\r\n        return results;\r\n    };\r\n\r\n\r\n    constructor(t1, t2) {\r\n        super();\r\n        if (t1 < 0 || t1 > 13) {\r\n            throw new Error(\"Torch 1 position must be between 0 and 13\");\r\n        }\r\n        if (t2 < 0 || t2 > 13) {\r\n            throw new Error(\"Torch 2 position must be between 0 and 13\");\r\n        }\r\n\r\n        if (t1 === t2) {\r\n            throw new Error(\"Torches can not be in same position\");\r\n        }\r\n\r\n        const _t1 = Math.min(t1,t2);\r\n        const _t2 = Math.max(t2,t1);\r\n\r\n        var nums = [1,2,3,4,5,6,7,8,9,10,11,12,13,14];\r\n        var _c1 = nums.slice(_t1, _t2).reduce((a,i)=>a+i);    \r\n        var _c2 = 105 - _c1;\r\n        this.t1 = _t1;\r\n        this.t2 = _t2;\r\n        this.c1 = Math.min(_c1,_c2);\r\n        this.c2 = Math.max(_c1,_c2);\r\n        this.concept = `${this.c1}/${this.c2}`;\r\n        this._fullConcept = null;\r\n        this.getFullConcept = this.getFullConcept.bind(this);\r\n    }\r\n\r\n    getFullConcept() {\r\n        if (!this._fullConcept) {\r\n            const wheels = Wheelwork.findWheels(this.c1, this.c2);\r\n            this._fullConcept = this.concept;\r\n            for(var i=0; i < wheels.length && wheels.length > 1; i++) {\r\n                if (wheels[i].t1 === this.t1 && wheels[i].t2 === this.t2) {\r\n                    this._fullConcept = `${this.concept} ${[\"A\",\"B\",\"C\",\"D\",\"E\"][i]}`;\r\n                }\r\n            }\r\n        }\r\n        return this._fullConcept;\r\n    }\r\n\r\n}\r\n\r\nexport default Wheelwork;\r\n","import React, { Component } from \"react\";\r\n\r\nimport TorchIcon from \"./img/torch.png\";\r\nimport \"./torch.css\";\r\n\r\nclass Torch extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"torch\" style={{ transform: `rotate(-${this.props.pos * (360 / 14)}deg)` }}>\r\n          <img src={TorchIcon} alt=\"Torch\"></img>\r\n          <div className=\"arm\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Torch;\r\n","import React, { Component } from \"react\";\r\nimport \"./idea.css\";\r\n\r\nimport DivineLight from \"./img/divine-light.png\";\r\nimport Sky from \"./img/sky.png\";\r\nimport Land from \"./img/land.png\";\r\nimport Vegetation from \"./img/vegetation.png\";\r\nimport Sunlight from \"./img/sunlight.png\";\r\nimport Moonlight from \"./img/moonlight.png\";\r\nimport Starlight from \"./img/starlight.png\";\r\nimport SeaCreatures from \"./img/sea-creatures.png\";\r\nimport Birds from \"./img/birds.png\";\r\nimport AnimalKingdom from \"./img/animal-kingdom.png\";\r\nimport EyeMind from \"./img/eye-mind.png\";\r\nimport HeatWithFlames from \"./img/heart-with-flames.png\";\r\nimport DominionGavel from \"./img/dominion-gavel.png\";\r\nimport Freedom from \"./img/freedom.png\";\r\n\r\nclass Idea extends Component {\r\n  static getIdeas(t1, t2) {\r\n    var ideas = [\r\n      { name: \"Divine Light\", icon: DivineLight, pos: 0 },\r\n      { name: \"Sky\", icon: Sky, pos: 1 },\r\n      { name: \"Dry Land\", icon: Land, pos: 2 },\r\n      { name: \"Vegetation\", icon: Vegetation, pos: 3 },\r\n      { name: \"Greater Light\", icon: Sunlight, pos: 4 },\r\n      { name: \"Lesser Light\", icon: Moonlight, pos: 5 },\r\n      { name: \"Starlight\", icon: Starlight, pos: 6 },\r\n      { name: \"Sea Creatures\", icon: SeaCreatures, pos: 7 },\r\n      { name: \"Birds of Air\", icon: Birds, pos: 8 },\r\n      { name: \"Animal Kingdom\", icon: AnimalKingdom, pos: 9 },\r\n      { name: \"Mind/Image of God\", icon: EyeMind, pos: 10 },\r\n      { name: \"Human Heart\", icon: HeatWithFlames, pos: 11 },\r\n      { name: \"Dominion\", icon: DominionGavel, pos: 12 },\r\n      { name: \"Freedom\", icon: Freedom, pos: 13}\r\n    ]\r\n\r\n    ideas[t2].pos = t1-1;\r\n    if (ideas[t2].pos < 0) { ideas[t2].pos = 13; }\r\n    ideas[t1].pos = t2-1;\r\n    if (ideas[t1].pos < 0) { ideas[t1].pos = 13; }\r\n    return ideas.map((i, idx) => (<Idea {...i} key={idx} />));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"element\" style={{ transform: `rotate(-${this.props.pos * (360 / 14) + (180 / 14)}deg)` }}>\r\n        <img src={this.props.icon} alt={this.props.name} style={{ transform: `rotate(${this.props.pos * (360 / 14) + (180 / 14)}deg)` }}></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Idea;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\n\r\nimport ColorWheel from \"./components/img/color-wheel.png\";\r\n\r\nimport Wheelwork from \"./wheelwork\";\r\nimport Torch from \"./components/torch\";\r\nimport Idea from \"./components/idea\";\r\n\r\nimport \"./app.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.concepts = Wheelwork.getAllConcepts();\r\n\r\n    this.state = { concept: 0 };\r\n    this.changeConcept = this.changeConcept.bind(this);\r\n  }\r\n\r\n  changeConcept(ev) {\r\n    var newConcept;\r\n    if (ev.target.innerText === \"Prev\") {\r\n      newConcept = this.state.concept - 1;\r\n      if (newConcept < 0) {\r\n        newConcept = 0;\r\n      }\r\n    } else {\r\n      newConcept = this.state.concept + 1;\r\n      if (newConcept > this.concepts.length - 1) {\r\n        newConcept = this.concepts.length -1;\r\n      } \r\n    }\r\n    this.setState({ concept: newConcept });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    var currentConcept = this.concepts[this.state.concept];\r\n    var conceptText = (currentConcept.getFullConcept) ? currentConcept.getFullConcept() : `${currentConcept.concept} omission`;\r\n    var wheelHtml = (currentConcept.getFullConcept) ? (\r\n      <div className=\"wheel\">\r\n        <img src={ColorWheel} alt=\"Color Wheel\"></img>\r\n        <Torch pos={currentConcept.t1} />\r\n        <Torch pos={currentConcept.t2} />\r\n        {Idea.getIdeas(currentConcept.t1, currentConcept.t2)}\r\n      </div>) : (<div className=\"wheel\"></div>);\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        {wheelHtml}\r\n\r\n        <div className=\"wheel-control\">\r\n          <button onClick={this.changeConcept}>Prev</button>\r\n          <h3>Concept {conceptText}</h3>\r\n          <button onClick={this.changeConcept}>Next</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}